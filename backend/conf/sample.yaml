interval: 60
probeTimeout: 60
port: 8787
analysis: true
# begin uptime
# if you don't want to use influxdb to record uptime, just left addr empty
influxdb:
  addr: 'http://influxdb:8086'
  org: 'network-monitor'
  token: 'token'
uptime:
  store-duration: '168h'
# end uptime

# redirect metadata to another url
metadataRedirect: ""

probe:
  # bgp mrt sftp
  bgp1:
    fetch:
      type: sftp
      host: "1.1.1.1"
      port: 22
      user: "username"
      password: "password"
      # go template supported
      filepath: "/var/log/bird/{{- (Now.Add (Second -60)).Format \"01-02-2006-15-04\"}}.mrt"
      # for peer checking, not your privateKey, optional
      public-key: "public-key"
    parse:
      type: mrt-addpath
    draw:
      type: bgp
      name: bgp1
  # bgp listen port 179
  bgp2:
    fetch: 
      type: bgp
      mode: listen
      asn: 1
      router-id: 1.1.1.1
    parse:
      type: bgp
    draw:
      type: bgp
      name: bgp2
  # bgp dial to collector
  bgp3:
    fetch: 
      type: bgp
      mode: dial
      asn: 1
      peer-asn: 2
      router-id: 1.1.1.1
      neighbor-addr: 172.16.0.1
    parse:
      type: bgp
      left-shift: 1
    draw:
      type: bgp
      name: bgp3
  # OSPF bird ssh
  AS1:
    fetch:
      type: "ssh"
      host: "1.1.1.1"
      port: 22
      user: "root"
      password: "password"
      command: "birdc show ospf state all"
    parse:
      type: bird-ospf
      # if you don't have BGP ASN, use random number
    draw:
      type: ospf
      asn: 4222222222
  # OSPF bird bird-lg-go
  AS2:
    fetch:
      type: "bird-lg-go"
      api: "https://url/api/"
      server: she
      req-type: bird
      args: "show ospf state all op_ospf_0"
    parse:
      type: bird-ospf
    draw:
      type: ospf
      asn: 4222222223
  # OSPF bird http
  AS3:
    fetch:
      type: "http"
      url:  "http://endpoint"
      method: "GET"
    parse:
      type: bird-ospf
    draw:
      type: ospf
      asn: 4222222224
  # OSPF ros ros
  AS4:
    fetch:
      type: ros
      Address: "ip:port"
      Username: "Username"
      Password: "Password"
    parse:
      type: ros-ospf
    draw:
      type: ospf
      asn: 4222222225
  # OSPF bird cmd
  # not recommended
  AS5:
    fetch:
      type: cmd
      command: "birdc show ospf state all"
    parse:
      type: bird-ospf
    draw:
      type: ospf
      asn: 4222222226
  # OSPF bird tcp
  AS6:
    fetch:
      type: tcp
      addr: '123.123.123.123:12345'
    parse:
      type: bird-ospf
    draw:
      type: ospf
      asn: 4222222227
